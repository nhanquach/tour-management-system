@model QuanLyTour.Models.TourGroup

@{
    ViewBag.Title = "AddGroup";
    Layout = "~/Views/Admin/_Admin_layout.cshtml";
}

<h2>Create new tour</h2>
<p>I will walk you through a few steps to create a new tour.</p>
<ol class="breadcrumb">
    <li class="breadcrumb-item">General Info</li>
    <li class="breadcrumb-item">Add destinations</li>
    <li class="breadcrumb-item active">Add Tour Groups</li>
    <li class="breadcrumb-item">Confirm</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col">Tour group ID</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TourGroupID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TourGroupID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col">Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col">Description</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col">Leave Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LeaveDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col">Return Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col">Number of people</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfPeople, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfPeople, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <input type="submit" value="Save and add another" class="btn btn-primary" formaction="Save"/>
                <input type="submit" value="Finish" class="btn btn-outline-primary" formaction="Finish"/>
            </div>
        </div>
    </div>
}
